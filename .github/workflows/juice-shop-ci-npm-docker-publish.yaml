name: juice-shop-ci-npm-docker-publish

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  actions: read # for detecting the Github Actions environment.
  id-token: write # for creating OIDC tokens for signing.
  packages: write # for uploading attestations.
  contents: read #Ability to read the contents permission
  security-events: write # Required for uploading code scanning 

env:
  NODE_DEFAULT_VERSION: 20  
  ANGULAR_CLI_VERSION: 17
  NPM_JF_RT_REPO: ${{ vars.NPM_JF_RT_REPO }}
  DOCKER_JF_RT_REPO: ${{ vars.DOCKER_JF_RT_REPO }}
  JF_PROJECT: ${{ vars.JF_PROJECT }}
  JF_URL: ${{ vars.JF_URL }}
jobs:
  npm-docker-build-and-publish-dev:
    runs-on: ubuntu-20.04
    steps:
      - run: |
          echo "The job was triggered by a ${{ github.event_name }} event."
      - name: Check out repository code üõéÔ∏è
        uses: actions/checkout@v3
      - run: |
          echo "${{ github.repository }} repository has been cloned to the runner."
      - name: List files in the repository
        run: |
          ls -la ${{ github.workspace }}
      - name: Use Node.js
        uses: actions/setup-node@v4
        with: 
          node-version: ${{ env.NODE_DEFAULT_VERSION }}
      - name: JFrog CLI setup üê∏
        uses: jfrog/setup-jfrog-cli@v4
        env:
          JF_URL: https://${{ vars.JF_URL }}/
          JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}
      - name: Health check JFrog Artifactory instance üê∏
        run: |
          jfrog --version
          jfrog rt ping
          jfrog config show
      - name: Capture previous build version
        run: echo NPM_PACKAGE_BUILD_VERSION=$(cat package.json | jq -r ."version") >> $GITHUB_ENV
      - name: Set JF NPM Config
        run:  |
          jfrog npm-config --repo-deploy=$NPM_JF_RT_REPO -repo-resolve=$NPM_JF_RT_REPO
          jfrog npm config set registry ${{ env.JF_URL }}/artifactory/api/npm/$NPM_JF_RT_REPO/
          jfrog npm config list | jq -r .registry
        env:
          JF_URL: https://${{ vars.JF_URL }}
      # - name: JFrog Curation audit
      #   run: |
      #     jf curation-audit
      # - name: JFrog audit üê∏
      #   run: |
      #     jfrog audit
      - name: Install NPM dependencies
        run: |
          jfrog npm i -g @angular/cli@${{ env.ANGULAR_CLI_VERSION }}
          jfrog npm i --ignore-scripts --build-name $JFROG_CLI_BUILD_NAME --build-number $JFROG_CLI_BUILD_NUMBER --module npm-build --project $JF_PROJECT
      - name: NPM publish üê∏
        run: jfrog npm publish  --project $JF_PROJECT --build-name $JFROG_CLI_BUILD_NAME --build-number $JFROG_CLI_BUILD_NUMBER --module npm-build
      - name: Login to JFrog Docker repo
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.JF_URL }}
          username: ${{ secrets.JF_USERNAME }}
          password: ${{ secrets.JF_ACCESS_TOKEN }}
      - name: Docker Build üê≥üê∏
        run: |
          echo "//${{ env.JF_URL }}/artifactory/api/npm/$NPM_JF_RT_REPO/:_authToken=${{ env.NPM_TOKEN }}" >> $HOME/.npmrc
          cat $HOME/.npmrc
          jfrog docker image build --tag ${{ env.JF_URL }}/$DOCKER_JF_RT_REPO/juice-shop-demo:${{ env.NPM_PACKAGE_BUILD_VERSION }} --secret id=npmrc,src=$HOME/.npmrc  --build-name $JFROG_CLI_BUILD_NAME --build-number $JFROG_CLI_BUILD_NUMBER --module docker-build --project $JF_PROJECT --build-arg="REGISTRY_URL=${{ env.JF_URL }}" --build-arg="DOCKER_REPO_NAME=$DOCKER_JF_RT_REPO" --build-arg="NPM_REPO_NAME=$NPM_JF_RT_REPO" .
        env:
          JF_URL: ${{ vars.JF_URL }}
          NPM_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}
      # - name: JFrog docker image scan üê≥üê∏
      #   run: |
      #     jfrog docker scan ${{ env.JF_URL }}/$DOCKER_JF_RT_REPO/juice-shop-demo:${{ env.NPM_PACKAGE_BUILD_VERSION }}
      #   env:
      #     JF_URL: ${{ vars.JF_URL }}
      - name: Docker Push üê≥üê∏
        run: |
          jfrog docker push ${{ env.JF_URL }}/$DOCKER_JF_RT_REPO/juice-shop-demo:${{ env.NPM_PACKAGE_BUILD_VERSION }} --build-name $JFROG_CLI_BUILD_NAME --build-number $JFROG_CLI_BUILD_NUMBER --module docker-build --project $JF_PROJECT
        env:
          JF_URL: ${{ vars.JF_URL }}
      - name: Gather build details üê∏
        run: |
          jfrog rt build-add-git $JFROG_CLI_BUILD_NAME $JFROG_CLI_BUILD_NUMBER ./ --project $JF_PROJECT
          jfrog rt build-collect-env $JFROG_CLI_BUILD_NAME $JFROG_CLI_BUILD_NUMBER --project $JF_PROJECT
      - name: JFrog build publish üê∏
        run: jfrog rt build-publish  $JFROG_CLI_BUILD_NAME $JFROG_CLI_BUILD_NUMBER --project $JF_PROJECT
      - name: JFrog build scan üê∏
        run: |
          sleep 60
          jfrog bs $JFROG_CLI_BUILD_NAME $JFROG_CLI_BUILD_NUMBER --project $JF_PROJECT --vuln=true